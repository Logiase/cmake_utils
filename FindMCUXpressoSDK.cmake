cmake_minimum_required(VERSION 3.20)

if (NOT DEFINED MCUXPRESSO_SDK_PATH)
    message(FATAL_ERROR "MCUXPRESSO_SDK_PATH not found")
endif ()

get_filename_component(sdk_name ${MCUXPRESSO_SDK_PATH} NAME)
string(REGEX MATCH "SDK_([0-9]+)_([0-9]+)_([0-9]+)_(.*)" sdk_name_match_result ${sdk_name})
if (NOT CMAKE_MATCH_COUNT EQUAL 4)
    message(FATAL_ERROR "Invalid MCUXPRESSO_SDK_PATH")
endif ()
set(sdk_major_version ${CMAKE_MATCH_1})
set(sdk_minor_version ${CMAKE_MATCH_2})
set(sdk_patch_version ${CMAKE_MATCH_3})
set(sdk_device ${CMAKE_MATCH_4})
set(sdk_version ${sdk_major_version}.${sdk_minor_version}.${sdk_patch_version})

file(GLOB temp "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}/system_${sdk_device}_*.c")
foreach (file IN LISTS temp)
    get_filename_component(file_name ${file} NAME)
    string(REGEX MATCH "system_${sdk_device}_(.*).c" file_name_match_result ${file_name})
    if (NOT CMAKE_MATCH_COUNT EQUAL 1)
        continue()
    endif ()
    list(APPEND cores ${CMAKE_MATCH_1})
endforeach ()
list(LENGTH cores cores_len)
if (cores_len EQUAL 0)
    if (NOT TARGET MCUXpressoSDK::Device)
        add_library(MCUXpressoSDK::Device INTERFACE IMPORTED)
        target_include_directories(MCUXpressoSDK::Device INTERFACE "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}")
        target_sources(MCUXpressoSDK::Device INTERFACE "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}/system_${sdk_device}.c")
    endif ()
else ()
    foreach (core IN LISTS cores)
        if (NOT TARGET MCUXpressoSDK::Device::${core})
            add_library(MCUXpressoSDK::Device::${core} INTERFACE IMPORTED)
            target_include_directories(MCUXpressoSDK::Device::${core} INTERFACE "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}")
            target_sources(MCUXpressoSDK::Device::${core} INTERFACE "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}/system_${sdk_device}_${core}.c")
        endif ()
    endforeach ()
endif ()

if (NOT TARGET MCUXpressoSDK::CMSIS)
    add_library(MCUXpressoSDK::CMSIS INTERFACE IMPORTED)
    target_include_directories(MCUXpressoSDK::CMSIS INTERFACE "${MCUXPRESSO_SDK_PATH}/CMSIS/Core/Include")
endif ()

if (NOT TARGET MCUXpressoSDK::Drivers_Include)
    add_library(MCUXpressoSDK::Drivers_Include INTERFACE IMPORTED)
    target_include_directories(MCUXpressoSDK::Drivers_Include INTERFACE "${MCUXPRESSO_SDK_PATH}/devices/${sdk_device}/drivers")
endif ()

file(GLOB driver_files ${MCUXPRESSO_SDK_PATH}/device/${sdk_device}/drivers/*.c)
foreach (driver_file IN LISTS driver_files)
    get_filename_component(driver_file_name ${driver_file} NAME)
    string(REGEX MATCH "fsl_(.*).c" driver_file_name_match_result ${driver_file_name})
    if (NOT CMAKE_MATCH_COUNT EQUAL 1)
        continue()
    endif ()
    list(APPEND drivers ${CMAKE_MATCH_1})
endforeach ()

foreach (component IN LISTS MCUXpressoSDK_FIND_COMPONENTS)
    if (${component} IN_LIST drivers)
        if (NOT TARGET MCUXpressoSDK::drivers::${component})
            add_library(MCUXpressoSDK::drivers::${component} INTERFACE IMPORTED)
            target_sources(MCUXpressoSDK::drivers::${component} INTERFACE "${MCUXPRESSO_SDK_PATH}/device/${sdk_device}/drivers/fsl_${component}.c")
            target_link_libraries(MCUXpressoSDK::drivers::${component} INTERFACE MCUXpressoSDK::Drivers_Include)
        endif ()
    endif ()
endforeach ()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(MCUXpressoSDK
        REQUIRED_VARS MCUXPRESSO_SDK_PATH
        VERSION_VAR sdk_version
)
